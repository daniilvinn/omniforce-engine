#pragma lang : glsl
#pragma stage : compute
#version 460 core

#extension GL_EXT_buffer_reference2 : require
#extension GL_EXT_scalar_block_layout : require
#extension GL_EXT_debug_printf : require

#include "render_object.glslh"
#include "mesh_data.glslh"

layout(local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

layout(buffer_reference, scalar, buffer_reference_align = 4) buffer IndirectDrawParams {
    uint count;
    uvec3 params[];
};

layout(push_constant, scalar) uniform PushContants {
    MeshData mesh_data;
    RenderObjectData render_objects_queue;
    CulledRenderObjectIndices culled_objects_indices;
    IndirectDrawParams indirect_draw_buffer;
} pc;

void main() {
    uint gid = gl_GlobalInvocationID.x;
    if(gid < pc.indirect_draw_buffer.count) {
        RenderObjectData render_object = pc.render_objects_queue[pc.culled_objects_indices[gid].index];
        MeshData mesh_data = pc.mesh_data[render_object.geometry_data_id];

        uint meshlet_count = (mesh_data.meshlet_count + 31) / 32;
        pc.indirect_draw_buffer.params[pc.culled_objects_indices[gid].index] = uvec3(meshlet_count, 1, 1);
    }
}