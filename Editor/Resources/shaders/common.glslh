#ifndef COMMON_GLSLH
#define COMMON_GLSLH

#extension GL_EXT_scalar_block_layout : require
#extension GL_EXT_buffer_reference2 : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : require
#extension GL_EXT_shader_image_int64 : enable
#extension GL_EXT_shader_explicit_arithmetic_types_int64 : enable

#include "mesh_data.glslh"
#include "render_object.glslh"
#include "frustum.glslh"
#include "camera_data.glslh"


layout(binding = 0) uniform sampler2D texture_bank[65535];

struct Sprite {
	vec4 color_tint;
	vec3 position;
	vec2 size;
	f16vec4 rotation;
	uint texture_index;
};

layout(binding = 1, scalar) buffer SpriteData {
	Sprite sprites[];
} sprite_data;

layout(r64ui, binding = 2) uniform u64image2D visibility_buffer;

#endif