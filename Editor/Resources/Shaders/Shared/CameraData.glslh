#ifndef CAMERA_DATA_GLSLH
#define CAMERA_DATA_GLSLH

#ifdef __OMNI_COMPILE_SHADER_FOR_CXX
	#include <Foundation/Types.h>
	#include <glm/glm.hpp>
#else
	#include <Source/Frustum.glslh>

	#extension GL_EXT_buffer_reference2			: require
	#extension GL_EXT_scalar_block_layout		: require
#endif // defined __cplusplus

#ifdef __OMNI_COMPILE_SHADER_FOR_CXX
namespace Omni::GLSL {
	struct CameraData {
		using mat4 = glm::mat4;
		using vec3 = glm::vec3;
#else
	layout(buffer_reference, scalar, buffer_reference_align = 4) readonly buffer CameraData {
#endif
		mat4 view;
		mat4 proj;
		mat4 view_proj;
		vec3 position;
		Frustum frustum;
		vec3 forward_vector;
		float fov; // in radians
		float viewport_height;
		float viewport_width;
		float near_clip_distance;
		float far_clip_distance;
	};

#ifdef __OMNI_COMPILE_SHADER_FOR_CXX
}
#endif

#endif